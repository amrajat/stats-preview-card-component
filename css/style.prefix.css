@import url("https://fonts.googleapis.com/css2?family=Inter:wght@400;700&family=Lexend+Deca&display=swap");
:root {
  --color-blue-500: hsl(233, 47%, 7%);
  --color-blue-300: hsl(244, 38%, 16%);
  --color-violet-200: hsl(277, 64%, 61%);
  --color-white-100: hsl(0, 0%, 100%);
  --color-white-200: hsla(0, 0%, 100%, 0.75);
  --color-white-300: hsla(0, 0%, 100%, 0.6);
  --font-primary: "Inter", sans-serif;
  --font-secondary: "Lexend Deca", sans-serif; }

/*
  1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
  box-sizing: border-box; }

/*
  2. Remove default margin
*/
* {
  margin: 0; }

/*
  3. Allow percentage-based heights in the application
*/
html,
body {
  height: 100%; }

/*
  Typographic tweaks!
  4. Add accessible line-height
  5. Improve text rendering
*/
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  font-family: var(--font-primary);
  font-size: 0.9375rem;
  font-weight: 400;
  color: var(--color-white-100);
  display: grid;
  place-items: center;
  background: var(--color-blue-500);
  background: linear-gradient(to right, var(--color-violet-200), var(--color-blue-300)); }

/*
  6. Improve media defaults
*/
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%; }

/*
  7. Remove built-in form typography styles
*/
input,
button,
textarea,
select {
  font: inherit; }

/*
  8. Avoid text overflows
*/
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word; }

/*
  9. Create a root stacking context
*/
#root,
#__next {
  isolation: isolate; }

.hero {
  display: flex;
  flex-direction: column;
  margin: auto 1.5rem;
  border-radius: 0.5rem;
  background-color: var(--color-blue-300);
  overflow: hidden; }
  @media only screen and (min-width: 50em) {
    .hero {
      flex-direction: row; } }
  .hero__container {
    background-image: url(../images/image-header-mobile.jpg);
    background-size: cover;
    min-height: 15rem;
    width: 100%;
    position: relative;
    transition: transform 0.3s; }
    .hero__container:hover {
      transform: scale(1.1); }
    @media only screen and (min-width: 50em) {
      .hero__container {
        background-image: url(../images/image-header-desktop.jpg); } }
  .hero__image {
    background-color: rgba(154, 0, 250, 0.5);
    background-position: center;
    background-size: cover;
    position: absolute;
    height: 100%;
    width: 100%; }
  .hero__stats {
    padding: 2rem 1.5rem;
    display: flex;
    flex-direction: column;
    text-align: center;
    gap: 1.5rem; }
    @media only screen and (min-width: 50em) {
      .hero__stats {
        padding: 4rem 3rem;
        text-align: left;
        order: -1; } }
    .hero__stats-heading {
      font-size: 1.7rem;
      font-weight: 700;
      line-height: 1.15;
      z-index: 5; }
      @media only screen and (min-width: 50em) {
        .hero__stats-heading {
          font-size: 2.2rem; } }
      .hero__stats-heading--underline {
        color: var(--color-violet-200);
        position: relative;
        z-index: inherit; }
        .hero__stats-heading--underline::after {
          content: "";
          background-color: rgba(154, 0, 250, 0.3);
          position: absolute;
          left: 0;
          bottom: 0;
          width: 100%;
          height: 30%;
          transform: skew(-12deg);
          z-index: -1; }
    .hero__stats-paragraph {
      color: var(--color-white-200); }
      @media only screen and (min-width: 50em) {
        .hero__stats-paragraph {
          font-size: 1rem; } }
    .hero__stats-numbers {
      display: flex;
      flex-direction: column;
      gap: 2rem;
      align-items: center;
      line-height: 1.1; }
      @media only screen and (min-width: 50em) {
        .hero__stats-numbers {
          flex-direction: row;
          margin-top: 4rem; } }
      .hero__stats-numbers--number {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        background-image: linear-gradient(to right, var(--color-violet-200), var(--color-white-100));
        background-clip: text;
        -moz-background-clip: text;
        -webkit-background-clip: text;
        color: transparent;
        z-index: 999; }
      .hero__stats-numbers-name {
        position: relative;
        z-index: inherit;
        text-transform: uppercase;
        color: var(--color-white-300);
        font-weight: 400;
        font-size: 0.8rem;
        letter-spacing: 0.1rem; }
        .hero__stats-numbers-name::after {
          content: "";
          background-color: rgba(154, 0, 250, 0.3);
          position: absolute;
          left: 0;
          bottom: 0;
          width: 100%;
          height: 30%;
          transform: skew(-12deg);
          z-index: -1; }

/*# sourceMappingURL=data:application/json;base64, */